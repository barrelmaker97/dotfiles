---
- hosts: hermes
  tasks:
    - name: Create kubeconfig directory
      delegate_to: localhost
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: "0755"

    - name: Set owner of kubeconfig directory to {{ ansible_user }}
      become: true
      delegate_to: localhost
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        owner: "{{ ansible_user }}"
        recurse: true

    - name: Generate User Private Key
      delegate_to: localhost
      openssl_privatekey:
        path: "{{ ansible_env.HOME }}/.kube/{{ cluster_user }}.key"

    - name: Generate User CSR
      delegate_to: localhost
      openssl_csr:
        path: "{{ ansible_env.HOME }}/.kube/{{ cluster_user }}.csr"
        privatekey_path: "{{ ansible_env.HOME }}/.kube/{{ cluster_user }}.key"
        common_name: "{{ cluster_user }}"

    - name: Create User CSR Object
      k8s:
        state: present
        definition: "{{ lookup('template', './definitions/csr-user.yaml') | from_yaml }}"
      vars:
        user_csr_base64: "{{ lookup('file', '{{ ansible_env.HOME }}/.kube/{{ cluster_user }}.csr') | b64encode }}"

    - name: Approve User CSR
      command: "kubectl certificate approve {{ cluster_user }}"

    - name: Get Signed Certificate
      k8s_info:
        api_version: certificates.k8s.io/v1
        kind: CertificateSigningRequest
        name: "{{ cluster_user }}"
      register: user_cert

    - name: Save Certificate
      delegate_to: localhost
      copy:
        content: "{{ user_cert.resources[0].status.certificate | b64decode }}"
        dest: "{{ ansible_env.HOME }}/.kube/{{ cluster_user }}.crt"

    - name: Create User Namespace
      k8s:
        state: present
        definition: "{{ lookup('template', './definitions/namespace-user.yaml') | from_yaml }}"

    - name: Create User Role Binding
      k8s:
        state: present
        definition: "{{ lookup('template', './definitions/rolebinding-user.yaml') | from_yaml }}"

    - name: Create User Resource Quota
      k8s:
        state: present
        definition: "{{ lookup('template', './definitions/resourcequota-user.yaml') | from_yaml }}"

    - name: Create User Limit Range
      k8s:
        state: present
        definition: "{{ lookup('template', './definitions/limitrange-user.yaml') | from_yaml }}"
